Rajesh Kumar
==================
Kubernetes  with EKS
==========================
1234567890
=================================
Lab + Demo == AWS
-------------------------------'
Start Time - 9:00 AM IST
End Time - 5 PM IST
==============================
Lunch - 1 - 2 PM IST
==============================
2 BREAK
	- 15 mins
	11 AM 
	3.30 PM
-------------------------------------
Notes - github
==============================================================================
1 POD ----> KIND - POD

POD 
	1 POD
	MULTIPLE
	CONTROLL TO MATCH DESIRE == Actual
	-------------------------------
			RC

Deployment
	RC+
	Versioing
	Rollout
	Rollback
------------------------------------------------------
------------------------------------------------------
Today - Half
TOm- Full
Day - Full
THRUS - 2nd Half
--------------------
=================================================================
Master
- API Server 	-> POD -> Container -> Image -> Google Registry
- Etcd		-> POD -> Container -> Image -> Google Registry
- Controller Mgr-> POD -> Container -> Image -> Google Registry
- Shedular	-> POD -> Container -> Image -> Google Registry

- Kubelet	
- Docker
- Proxy -> POD -> Container -> Image -> Google Registry
- Kubeadm
- Kubectl

Worker
- Kubelet
- Proxy -> POD -> Container -> Image -> Google Registry
- Docker
- Kubeadm
- Kubectl

Workstation
- Kubectl
==========================================================================
http://www.devopsschool.com/slides/kubernetes/
=============================================================================

How to setup k8s clustor?
=======================================
40+ Mehtod is available
==========================
Where?
https://kubernetes.io/docs/setup/
	Laptop?
	- minikube
		linux VM
		- Master + Worker
	AWS
		Manual ( using kubeadm ) - NO AWS Service integration
		KOPS - AWS Service integration
		EKS - Managed k8s clustor
	Azure
		Manual ( using kubeadm ) - NO AWS Service integration
		KOPS - AWS Service integration
		AKS- Managed k8s clustor
	GC
		Manual ( using kubeadm ) - NO AWS Service integration
		KOPS - AWS Service integration
		GKE- Managed k8s clustor
	VMware
	
kubeadm
-------------------------------------
https://github.com/kubernetes/kubeadm

KOPS
-------------------------------------
https://github.com/kubernetes/kops

Day 1 & 2 - Manual ( using kubeadm ) - NO AWS Service integration
Day 3 - EKS - Managed k8s clustor
============================================
How to setup k8s using kubeadm?
=================================
Where?
- centos

https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/

Master - 1		52.66.105.78
	How to setup?
Worker - 1		65.0.199.180
	How to setup?



To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as                        root:

kubeadm join 172.31.12.97:6443 --token 7r5p4r.kp025zzxk4hk3mle \
    --discovery-token-ca-cert-hash sha256:980bf0aea779c997aa8f73c1c90c04989ebeb7                       fa5525d64677de441ba1be3567
[root@ip-172-31-12-97 centos]#

Workstation
- Kubectl

How Kubectl would connect to API server?
----------------------------------------------
kubectl 
	read one file. "config"
	~/.kube/config
		- YAML

What is the content of "config"?

Clustor(S)
	- clustor1 - http:api1-server:6443
	- clustor2 - http:api2-server:6443
User(S)
	- user1 - cert+key
	- user2 - cert+key
Context(S)
	Context1 = clustor1 + user2 
	Context2 = clustor2 + user1

Default-context = Context1 



kubeadm join 172.31.12.97:6443 --token 7r5p4r.kp025zzxk4hk3mle \
    --discovery-token-ca-cert-hash sha256:980bf0aea779c997aa8f73c1c90c04989ebeb7fa5525d64677de441ba1be3567
==================================
What is your DESIRE?
--------------------------------------
Compute
-----------------
POD
RC
DEPLOY

DNS
-------------
SERVICE

STORAGE

SECURITY
===================================================

[centos@ip-172-31-12-97 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v1                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1beta1                          true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1beta1               true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
ingresses                         ing          extensions/v1beta1                     true         Ingress
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta1   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta1   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1beta1                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
[centos@ip-172-31-12-97 ~]$


[centos@ip-172-31-12-97 ~]$ kubectl config view
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://172.31.12.97:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: REDACTED
    client-key-data: REDACTED



  17  kubectl get pods --all-namespaces
   18  kubectl get nodes
   19  kubectl describe pod coredns-74ff55c5b-x6gxs -n=kube-system
   20  clear
   21  ls
   22  clear
   23  kubectl get nodes
   24  kubeadm token -h
   25  clear
   26  kubeadm token list
   27  kubectl get nodes
   28  kubectl
   29  clear
   30  kubectl certificate -h
   31  clear
   32  kubectl
   33  clear
   34  kubectl api-resources
   35  clear
   36  kubectl api-resources | wc -l
   37* kubectl
   38  clear
   39  kubectl api-resources
   40  clear
   41  kubectl
   42  clkear
   43  clear
   44  kubectl api-versions



[centos@ip-172-31-12-97 ~]$ kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create        Create a resource from a file or from stdin.
  expose        Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run           Run a particular image on the cluster
  set           Set specific features on objects

Basic Commands (Intermediate):
  explain       Documentation of resources
  get           Display one or many resources
  edit          Edit a resource on the server
  delete        Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout       Manage the rollout of a resource
  scale         Set a new size for a Deployment, ReplicaSet or Replication Controller
  autoscale     Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate   Modify certificate resources.
  cluster-info  Display cluster info
  top           Display Resource (CPU/Memory/Storage) usage.
  cordon        Mark node as unschedulable
  uncordon      Mark node as schedulable
  drain         Drain node in preparation for maintenance
  taint         Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  proxy         Run a proxy to the Kubernetes API server
  cp            Copy files and directories to and from containers.
  auth          Inspect authorization
  debug         Create debugging sessions for troubleshooting workloads and nodes

Advanced Commands:
  diff          Diff live version against would-be applied version
  apply         Apply a configuration to a resource by filename or stdin
  patch         Update field(s) of a resource
  replace       Replace a resource by filename or stdin
  wait          Experimental: Wait for a specific condition on one or many resources.
  kustomize     Build a kustomization target from a directory or a remote url.

Settings Commands:
  label         Update the labels on a resource
  annotate      Update the annotations on a resource
  completion    Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources Print the supported API resources on the server
  api-versions  Print the supported API versions on the server, in the form of "group/version"
  config        Modify kubeconfig files
  plugin        Provides utilities for interacting with plugins.
  version       Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
================================================
How do we call API?

curl|kubectl - param ---

CURL VERB
	GET POST PUT DELETE
	CRUD
	--------
	Create
		CMD
			create
		YAML
			create  -f filename
	READ
		CMD
			get

	Update
		CMD
			edit
		YAML
			apply -f filename
	Delete
		CMD
			delete
		YAML
			delete -f filename

  81  kubectl create ns dev'
   82  kubectl create ns dev
   83  kubectl create ns qa
   84  kubectl get ns
   85  kubectl edit ns dev
   86  kubectl delete ns dev
   87  kubectl get ns
   88  history


============LAB===================
- Login to Workstation
- Check a Config file
- Play with kubectl
- All above commands
- Create a ns for you.



52.66.105.78
centos
centos123


==================================================================================
==================================================================================
pod.yaml
-------------------
apiVersion: v1
kind: Pod
metadata:
  name: hello-pod
  labels: 
    app: webserver
spec:
  containers:
  - name: hello-ctr
    image: nginx
    ports:
    - containerPort: 80
=======================
=================================================
=================================================
What is POD?
=======================================


 71  kubectl create -h
   72  clear
   73  kubectl create -h
   74  clear
   75  ls
   76  pwd
   77  ls
   78  mkdir rajesh
   79  clear
   80  cd rajesh/
   81  ls
   82  vi pod.yaml
   83  ls
   84  kubectl get ns
   85  clear
   86  kubectl create ns rajesh
   87  kubectl get ns
   88  clear
   89  ls
   90  kubectl create -f pod.yaml -n=rajesh
   91  kubectl get pods
   92  kubectl get pods -n=rajesh
   93  kubectl edit pod hello-pod -n=rajesh
   94  kubectl get pods -n=rajesh --show-labels
   95  vi pod.yaml
   96  kubectl apply -f pod.yaml -n=rajesh
   97  kubectl get pods -n=rajesh --show-labels
   98  kubectl delete pod hello-pod -n=rajesh
   99  kubectl delete -f pod.yaml -n=rajesh
  100  clear


Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  cp            Copy files and directories to and from containers.


kubectl port-forward --address 0.0.0.0 pod/hello-pod 80:5000 -n=rajesh



 71  kubectl get pods -n=rajesh
   72  kubectl exec hello-pod ls -n=rajesh
   73  clear
   74  ls
   75  kubectl get pods -n=rajesh -o wide
   76  curl http://10.44.0.3
   77  clear
   78  kubectl port-forward
   79  kubectl port-forward -h
   80  clear
   81  kubectl get pods -n=rajesh -o wide
   82  clear
   83  kubectl port-forward --address 0.0.0.0 pod/hello-pod 80:5000 -n=rajesh
   84  kubectl port-forward --address 0.0.0.0 pod/hello-pod 5000:80 -n=rajesh
   85  clear
   86  ls
   87  cd rajesh/
   88  ls
   89  kubectl cp pod.yaml hello-pod:/opt -n=rajesh
   90  kubectl exec hello-pod ls /opt/ -n=rajesh









































































































